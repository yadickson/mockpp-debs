$Id: README 1399 2007-06-09 21:30:49Z ewald-arnold $

              Mock Objects for C++
             ======================

mockpp is a library to facilitate unit tests and ntegration tests in the
spirit of MockObjects, EasyMock and jMock which were all designed for Java.

See also http://mockobjects.com, http://www.easymock.org and http://jmock.org.

The following files are useful to learn more about this library:

  * 3party/*
      Useful third-party packages already included for convenience.
      Some of them are slightly modified for better integration with mockpp.

  * generator/*
      Applications to create mock object implementations based on your
      header files.

  * contrib/*
      Contributed files.

  * mockpp
      Common files ported from the various original java sources.

  * mockpp/production
      Files which help to optimize production code for tests.

  * mockpp/util
      Files ported from the original MockObjects sources plus
      extensions for C++.

  * mockpp/compat
      Additial files to keep interfaces compatible taken from
      other java packages (junit, ..) plus extensions for C++.

  * mockpp/docs/en/var/index.html
      The handbook. It is not part of the source distribution. Either download
      it from the same place or generate yourself if you have docbook installed.
      Just type "make html-files" in the the source directory.

  * mockpp/docs/api/html/index.html
      The api docs. They are not part of the source distribution. Either download
      them from the same place or generate yourself if you have doxygen installed.
      Just type "make apidoc" in the the source directory.

  * mockpp/tests/*
      Files to help testing the library. They might also serve as a starting point
      to learn more about the use. Don't expect the library to run flawlessly unless
      you have *all* the tests successfully running.

  * mockpp/examples/*
    mockpp/examples/tutorial/*
      Example files to show the use of this library.

  * mockpp/constraint/*
      Constraints from the original jmock sources plus some new ones.
      .
  * mockpp/matcher/*
      Matchers from the original jmock sources plus some new ones.
      .
  * mockpp/stub/*
      Stubs from the original jmock java sources.
      .
  * mockpp/chaining/*
    mockpp/builder/*
      Core files ported from jMock.

In config-bcb5.h/config-msvc.h/... there are some #define's that might be
useful on non-autoconf systems or when you need to set up some things manually after
running "configure". But please take into account that those files might be regenerated
by the configure script.

There is also a directory for Borland BCB5 or M$VC++ users with project files.
See "bcb5", "msvc8", "msvc71" and their subdirectories with the READMEs.
For MSVC environment variable 'CPPUNIT_ROOT' should be set as install dir of CppUnit.

mockpp is known to run fine on Linux, OpenBSD and Windows.

Starting with version 1.2.0 mockpp uses partial template specialisation. In case you use
Microsoft Compilers before MSVC 7.1 you will run into trouble with these new files.
Please send complaints to Microsoft and ask them, why they don't adopt common standards for years.

Ports to not yet working platforms and compilers are highly welcome.

Send comments, suggestions and bugfixes to the mailing lists found at
http://mockpp.sf.net (or as a second choice to mockpp@ewald-arnold.de).

There are also several forums available which are also linked to from the
homepage.

Happy mocking
Ewald Arnold

